#!/bin/bash
## disable auto-unlock LUKS2 encrypted root on Fedora/Silverblue/maybe others
set -u

[ "$UID" -eq 0 ] || { echo "This script must be run as root."; exit 1;}

read -p "This will modify your system and disable TPM2 auto-unlock of your LUKS partition! Are you sure you've read the script and are good with this? " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
  [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1 # handle exits from shell or function but don't exit interactive shell
fi

DISK_UUID=$(sudo awk '{ print $2 }' /etc/crypttab | cut -d= -f2)
CRYPT_DISK="/dev/disk/by-uuid/$DISK_UUID"

## Restore the crypttab
cp -a /etc/crypttab /etc/crypttab.working-before-disable-tpm2
if [ -f /etc/crypttab.known-good ]; then
  echo "Restoring /etc/crypttab.known-good to original /etc/crypttab"
  mv /etc/crypttab.known-good /etc/crypttab
else
  echo "No /etc/crypttab.known-good found to restore"
fi

## Wipe luks slot
cryptsetup luksDump $CRYPT_DISK | grep systemd-tpm2 > /dev/null
if [ 0 -eq $? ]; then
  echo "Wiping systemd-tpm2 from LUKS on $CRYPT_DISK"
  systemd-cryptenroll --wipe-slot=tpm2 $CRYPT_DISK
else
  echo "No systemd-tpm2 found in LUKS to wipe"
fi

## Disable initramfs
rpm-ostree initramfs |grep tpm2 > /dev/null
if [ 0 -eq $? ]; then
  echo "WARNING: if you configured initramfs for anything other than TPM2, this wipes that too..."
  echo "here's a printout:"
  rpm-ostree initramfs
  echo
  echo "Disabling rpm-ostree initramfs..."
  rpm-ostree initramfs --disable
else
  echo "TPM2 was not found in 'rpm-ostree initramfs'..."
fi
